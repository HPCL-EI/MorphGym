# set default base and default training config based on base
defaults:
  - task: Dog
  - train: MorphTensor
  - morph: PSOSearch
  - override hydra/job_logging: disabled
  - _self_

# run element. defaults to element of training config
experiment: '${base.element}'

# base.rst element - used to pick the code to load
task_name: ${base.element}

save_network: True
save_summary: False
save_morph: ${if:${.mytest},False,True}

horizon_length: 16
#num_envs: 4096
minibatch_rate: 0.5
minibatch_size: ''

mlp: ''
terrain: 'Flat'  # Flat, Uphill, Downhill, Tunnel, Flat2
slope: 0
top_height: 0.7

# fsm
enable_fsm: True
action_rate: 0.5
ec: 0.001

train_envs_per_morph: 4096
envs_per_morph: ''

test_envs_per_morph: 1
games_to_track: 1

# morph
num_morphs: 1
num_heads: 4
morph_range: True
morph_asset_range:  0
morph_output_path: '${.output_path}/${.run}'
morph_tensor: ${eq:${.train.element},'MorphTensor'}

env_spacing: [2,2,2]

# rendering
headless: True
print_stats: False
enable_viewer_sync: True
viewer_following: True

# video
make_video: False
video_name: ''


# set the maximum number of hmp iterations to train for. overrides default per-environment setting
max_iterations: 500
max_search_iters: 2


root_path: ''
output_path: '${root_path}/outputs'

# RLGames Arguments
# mytest - if set, run policy in inference mode (requires setting checkpoint to load)
test: False
test_after_train: True
# used to set checkpoint path
checkpoint: ''
checkpoint_file: ''
# if set to positive integer, overrides the default number of environments

# seed - set to -1 to choose random seed
seed: 0
# set to True for deterministic performance
torch_deterministic: False

debug: False
## Device config
#  'physx' or 'flex'
physics_engine: 'physx'
# whether to use cpu or gpu pipeline
pipeline: ${if:${.debug},'cpu', 'gpu' }
# device for running physics simulation
sim_device:  ${if:${.debug},'cpu', 'cuda:0' }
# device to run RL
rl_device: 'cuda:0'
graphics_device_id: 0

## PhysX arguments
num_threads: 4 # Number of worker threads per scene used by PhysX - for CPU PhysX only.
solver_type: 1 # 0: pgs, 1: tgs
num_subscenes: 4 # Splits the simulation into N physics scenes and runs each one in a separate thread

# set to True to use multi-gpu horovod training
multi_gpu: False
count_time: False

# set the directory where the output files get saved
hydra:
  output_subdir: null
  run:
    dir: .

